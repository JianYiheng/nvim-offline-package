{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "description": "Setting of pyls",
  "properties": {
    "pyls.configurationSources": {
      "default": [
        "pycodestyle"
      ],
      "description": "List of configuration sources to use.",
      "items": {
        "enum": [
          "pycodestyle",
          "pyflakes"
        ],
        "type": "string"
      },
      "type": "array",
      "uniqueItems": true
    },
    "pyls.executable": {
      "default": "pyls",
      "description": "Language server executable",
      "type": "string"
    },
    "pyls.plugins.jedi.env_vars": {
      "default": null,
      "description": "Define environment variables for jedi.Script and Jedi.names.",
      "type": "dictionary"
    },
    "pyls.plugins.jedi.environment": {
      "default": null,
      "description": "Define environment for jedi.Script and Jedi.names.",
      "type": "string"
    },
    "pyls.plugins.jedi.extra_paths": {
      "default": [],
      "description": "Define extra paths for jedi.Script.",
      "type": "array"
    },
    "pyls.plugins.jedi_completion.enabled": {
      "default": true,
      "description": "Enable or disable the plugin.",
      "type": "boolean"
    },
    "pyls.plugins.jedi_completion.fuzzy": {
      "default": false,
      "description": "Enable fuzzy when requesting autocomplete.",
      "type": "boolean"
    },
    "pyls.plugins.jedi_completion.include_class_objects": {
      "default": true,
      "description": "Adds class objects as a separate completion item.",
      "type": "boolean"
    },
    "pyls.plugins.jedi_completion.include_params": {
      "default": true,
      "description": "Auto-completes methods and classes with tabstops for each parameter.",
      "type": "boolean"
    },
    "pyls.plugins.jedi_definition.enabled": {
      "default": true,
      "description": "Enable or disable the plugin.",
      "type": "boolean"
    },
    "pyls.plugins.jedi_definition.follow_builtin_imports": {
      "default": true,
      "description": "If follow_imports is True will decide if it follow builtin imports.",
      "type": "boolean"
    },
    "pyls.plugins.jedi_definition.follow_imports": {
      "default": true,
      "description": "The goto call will follow imports.",
      "type": "boolean"
    },
    "pyls.plugins.jedi_hover.enabled": {
      "default": true,
      "description": "Enable or disable the plugin.",
      "type": "boolean"
    },
    "pyls.plugins.jedi_references.enabled": {
      "default": true,
      "description": "Enable or disable the plugin.",
      "type": "boolean"
    },
    "pyls.plugins.jedi_signature_help.enabled": {
      "default": true,
      "description": "Enable or disable the plugin.",
      "type": "boolean"
    },
    "pyls.plugins.jedi_symbols.all_scopes": {
      "default": true,
      "description": "If True lists the names of all scopes instead of only the module namespace.",
      "type": "boolean"
    },
    "pyls.plugins.jedi_symbols.enabled": {
      "default": true,
      "description": "Enable or disable the plugin.",
      "type": "boolean"
    },
    "pyls.plugins.mccabe.enabled": {
      "default": true,
      "description": "Enable or disable the plugin.",
      "type": "boolean"
    },
    "pyls.plugins.mccabe.threshold": {
      "default": 15,
      "description": "The minimum threshold that triggers warnings about cyclomatic complexity.",
      "type": "number"
    },
    "pyls.plugins.preload.enabled": {
      "default": true,
      "description": "Enable or disable the plugin.",
      "type": "boolean"
    },
    "pyls.plugins.preload.modules": {
      "default": null,
      "description": "List of modules to import on startup",
      "items": {
        "type": "string"
      },
      "type": "array",
      "uniqueItems": true
    },
    "pyls.plugins.pycodestyle.enabled": {
      "default": true,
      "description": "Enable or disable the plugin.",
      "type": "boolean"
    },
    "pyls.plugins.pycodestyle.exclude": {
      "default": null,
      "description": "Exclude files or directories which match these patterns.",
      "items": {
        "type": "string"
      },
      "type": "array",
      "uniqueItems": true
    },
    "pyls.plugins.pycodestyle.filename": {
      "default": null,
      "description": "When parsing directories, only check filenames matching these patterns.",
      "items": {
        "type": "string"
      },
      "type": "array",
      "uniqueItems": true
    },
    "pyls.plugins.pycodestyle.hangClosing": {
      "default": null,
      "description": "Hang closing bracket instead of matching indentation of opening bracket's line.",
      "type": "boolean"
    },
    "pyls.plugins.pycodestyle.ignore": {
      "default": null,
      "description": "Ignore errors and warnings",
      "items": {
        "type": "string"
      },
      "type": "array",
      "uniqueItems": true
    },
    "pyls.plugins.pycodestyle.maxLineLength": {
      "default": null,
      "description": "Set maximum allowed line length.",
      "type": "number"
    },
    "pyls.plugins.pycodestyle.select": {
      "default": null,
      "description": "Select errors and warnings",
      "items": {
        "type": "string"
      },
      "type": "array",
      "uniqueItems": true
    },
    "pyls.plugins.pydocstyle.addIgnore": {
      "default": null,
      "description": "Ignore errors and warnings in addition to the specified convention.",
      "items": {
        "type": "string"
      },
      "type": "array",
      "uniqueItems": true
    },
    "pyls.plugins.pydocstyle.addSelect": {
      "default": null,
      "description": "Select errors and warnings in addition to the specified convention.",
      "items": {
        "type": "string"
      },
      "type": "array",
      "uniqueItems": true
    },
    "pyls.plugins.pydocstyle.convention": {
      "default": null,
      "description": "Choose the basic list of checked errors by specifying an existing convention.",
      "enum": [
        "pep257",
        "numpy"
      ],
      "type": "string"
    },
    "pyls.plugins.pydocstyle.enabled": {
      "default": false,
      "description": "Enable or disable the plugin.",
      "type": "boolean"
    },
    "pyls.plugins.pydocstyle.ignore": {
      "default": null,
      "description": "Ignore errors and warnings",
      "items": {
        "type": "string"
      },
      "type": "array",
      "uniqueItems": true
    },
    "pyls.plugins.pydocstyle.match": {
      "default": "(?!test_).*\\.py",
      "description": "Check only files that exactly match the given regular expression; default is to match files that don't start with 'test_' but end with '.py'.",
      "type": "string"
    },
    "pyls.plugins.pydocstyle.matchDir": {
      "default": "[^\\.].*",
      "description": "Search only dirs that exactly match the given regular expression; default is to match dirs which do not begin with a dot.",
      "type": "string"
    },
    "pyls.plugins.pydocstyle.select": {
      "default": null,
      "description": "Select errors and warnings",
      "items": {
        "type": "string"
      },
      "type": "array",
      "uniqueItems": true
    },
    "pyls.plugins.pyflakes.enabled": {
      "default": true,
      "description": "Enable or disable the plugin.",
      "type": "boolean"
    },
    "pyls.plugins.pylint.args": {
      "default": null,
      "description": "Arguments to pass to pylint.",
      "items": {
        "type": "string"
      },
      "type": "array",
      "uniqueItems": false
    },
    "pyls.plugins.pylint.enabled": {
      "default": false,
      "description": "Enable or disable the plugin.",
      "type": "boolean"
    },
    "pyls.plugins.pylint.executable": {
      "default": null,
      "description": "Executable to run pylint with. Enabling this will run pylint on unsaved files via stdin. Can slow down workflow. Only works with python3.",
      "type": "string"
    },
    "pyls.plugins.rope_completion.enabled": {
      "default": true,
      "description": "Enable or disable the plugin.",
      "type": "boolean"
    },
    "pyls.plugins.yapf.enabled": {
      "default": true,
      "description": "Enable or disable the plugin.",
      "type": "boolean"
    },
    "pyls.rope.extensionModules": {
      "default": null,
      "description": "Builtin and c-extension modules that are allowed to be imported and inspected by rope.",
      "type": "string"
    },
    "pyls.rope.ropeFolder": {
      "default": null,
      "description": "The name of the folder in which rope stores project configurations and data.  Pass `null` for not using such a folder at all.",
      "items": {
        "type": "string"
      },
      "type": "array",
      "uniqueItems": true
    }
  }
}
